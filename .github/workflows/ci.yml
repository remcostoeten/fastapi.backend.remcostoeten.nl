name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

env:
  PYTHON_VERSION: "3.12"

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Run tests with coverage
      run: |
        pytest --cov=app --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: github.event_name == 'push'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

    - name: Run linting
      run: |
        pip install flake8 black isort
        flake8 app --max-line-length=88 --extend-ignore=E203,W503
        black --check app
        isort --check-only app

    - name: Check if app starts
      run: |
        timeout 10s python -m app.main || true

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Railway CLI
      run: |
        curl -fsSL https://railway.app/install.sh | sh

    - name: Deploy to Railway
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        railway login --token $RAILWAY_TOKEN
        railway up
        railway status

    - name: Wait for deployment
      run: |
        echo "Waiting for Railway deployment to complete..."
        sleep 30

    - name: Health check
      run: |
        # Get the deployment URL from Railway
        DEPLOYMENT_URL=$(railway domain --no-trunc 2>/dev/null | head -n1 || echo "")
        if [ -n "$DEPLOYMENT_URL" ]; then
          echo "Checking health at: $DEPLOYMENT_URL/api/v1/health"
          curl -f "$DEPLOYMENT_URL/api/v1/health" || exit 1
          echo "✅ Health check passed"
        else
          echo "⚠️ Could not get deployment URL, skipping health check"
        fi

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: remcostoeten-api:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        docker run --rm -d --name api-test -p 8000:8000 remcostoeten-api:test
        sleep 10
        curl -f http://localhost:8000/api/v1/health || exit 1
        docker stop api-test